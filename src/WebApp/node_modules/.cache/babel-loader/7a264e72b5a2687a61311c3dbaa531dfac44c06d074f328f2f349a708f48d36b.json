{"ast":null,"code":"var _jsxFileName = \"/Users/mrsteve.bang/Documents/_projects/aks-sample/src/WebApp/src/components/Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTodos, createTodo, deleteTodo, markCompleted } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoPage() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [todoName, setTodoName] = useState('');\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await getTodos();\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  const handleAddTodo = async () => {\n    if (!todoName.trim()) return;\n    try {\n      await createTodo({\n        name: todoName\n      });\n      setTodoName('');\n      fetchTodos();\n    } catch (error) {\n      console.error('Error creating todo:', error);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    try {\n      await deleteTodo(id);\n      fetchTodos();\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n  const handleOnChecked = async id => {\n    try {\n      await markCompleted(id);\n      fetchTodos();\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter todo name\",\n      value: todoName,\n      onChange: e => setTodoName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.name, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.isCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoPage, \"m06OsgRFLV+O8j2aSecm1uYDHi8=\");\n_c = TodoPage;\nexport default TodoPage;\nvar _c;\n$RefreshReg$(_c, \"TodoPage\");","map":{"version":3,"names":["React","useEffect","useState","getTodos","createTodo","deleteTodo","markCompleted","jsxDEV","_jsxDEV","TodoPage","_s","todos","setTodos","todoName","setTodoName","fetchTodos","response","data","error","console","handleAddTodo","trim","name","handleDeleteTodo","id","handleOnChecked","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","todo","checked","isCompleted","_c","$RefreshReg$"],"sources":["/Users/mrsteve.bang/Documents/_projects/aks-sample/src/WebApp/src/components/Todo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getTodos, createTodo, deleteTodo, markCompleted } from '../api';\n\nfunction TodoPage() {\n  const [todos, setTodos] = useState([]);\n  const [todoName, setTodoName] = useState('');\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = async () => {\n    try {\n      const response = await getTodos();\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  const handleAddTodo = async () => {\n    if (!todoName.trim()) return;\n    try {\n      await createTodo({ name: todoName });\n      setTodoName('');\n      fetchTodos();\n    } catch (error) {\n      console.error('Error creating todo:', error);\n    }\n  };\n\n  const handleDeleteTodo = async (id) => {\n    try {\n      await deleteTodo(id);\n      fetchTodos();\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n\n  const handleOnChecked = async (id) => {\n    try {\n      await markCompleted(id);\n      fetchTodos();\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  }\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Todo List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter todo name\"\n        value={todoName}\n        onChange={(e) => setTodoName(e.target.value)}\n      />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>\n            {todo.name}\n            <input type='checkbox' checked={todo.isCompleted} />\n            <button onClick={() => handleDeleteTodo(todo.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}